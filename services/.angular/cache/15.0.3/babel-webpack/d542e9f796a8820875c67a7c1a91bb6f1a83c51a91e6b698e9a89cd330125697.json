{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./logging.service\";\nexport class AccountsService {\n  constructor(loggingService) {\n    this.loggingService = loggingService;\n    this.accounts = [{\n      name: 'Master Account',\n      status: 'active'\n    }, {\n      name: 'Testaccount',\n      status: 'inactive'\n    }, {\n      name: 'Hidden Account',\n      status: 'unknown'\n    }];\n  }\n  addAccount(name, status) {\n    this.accounts.push({\n      name: name,\n      status: status\n    });\n  }\n  updateAccount(id, status) {\n    this.accounts[id].status = status;\n  }\n}\nAccountsService.ɵfac = function AccountsService_Factory(t) {\n  return new (t || AccountsService)(i0.ɵɵinject(i1.LoggingService));\n};\nAccountsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AccountsService,\n  factory: AccountsService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAMA,OAAM,MAAOA,eAAe;EAiB1BC,YAAoBC,cAA8B;IAA9B,mBAAc,GAAdA,cAAc;IAflC,aAAQ,GAAG,CACT;MACEC,IAAI,EAAE,gBAAgB;MACtBC,MAAM,EAAE;KACT,EACD;MACED,IAAI,EAAE,aAAa;MACnBC,MAAM,EAAE;KACT,EACD;MACED,IAAI,EAAE,gBAAgB;MACtBC,MAAM,EAAE;KACT,CACF;EAEqD;EAEtDC,UAAU,CAACF,IAAY,EAAEC,MAAc;IACrC,IAAI,CAACE,QAAQ,CAACC,IAAI,CAAC;MAAEJ,IAAI,EAAEA,IAAI;MAAEC,MAAM,EAAEA;IAAM,CAAE,CAAC;EACpD;EAEAI,aAAa,CAACC,EAAU,EAAEL,MAAc;IACtC,IAAI,CAACE,QAAQ,CAACG,EAAE,CAAC,CAACL,MAAM,GAAGA,MAAM;EACnC;;AAzBWJ,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAU,SAAfV,eAAe;EAAAW,YAFd;AAAM","names":["AccountsService","constructor","loggingService","name","status","addAccount","accounts","push","updateAccount","id","factory","providedIn"],"sourceRoot":"","sources":["C:\\Development\\Angular_Course\\services\\src\\app\\accounts.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { LoggingService } from './logging.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountsService {\n\n  accounts = [\n    {\n      name: 'Master Account',\n      status: 'active'\n    },\n    {\n      name: 'Testaccount',\n      status: 'inactive'\n    },\n    {\n      name: 'Hidden Account',\n      status: 'unknown'\n    }\n  ];\n\n  constructor(private loggingService: LoggingService) { }\n\n  addAccount(name: string, status: string) {\n    this.accounts.push({ name: name, status: status });\n  }\n\n  updateAccount(id: number, status: string) {\n    this.accounts[id].status = status;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}